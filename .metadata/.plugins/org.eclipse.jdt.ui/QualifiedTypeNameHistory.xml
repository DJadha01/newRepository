<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.Entity.User"/>
<fullyQualifiedTypeName name="com.Exceptions.ResourseNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.parameters.RequestBody"/>
<fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.tags.Tags"/>
<fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.tags.Tag"/>
<fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.Operation"/>
<fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.responses.ApiResponses"/>
<fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.responses.ApiResponse"/>
<fullyQualifiedTypeName name="com.DTO.RegisterRequest"/>
<fullyQualifiedTypeName name="javax.validation.Valid"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonProperty"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestControllerAdvice"/>
<fullyQualifiedTypeName name="com.Exceptions.ResourseFoundException"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="com.DTO.ErrorHandler"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
<fullyQualifiedTypeName name="com.Enum.UserStatusEnum"/>
<fullyQualifiedTypeName name="lombok.Builder"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="lombok.EqualsAndHashCode"/>
<fullyQualifiedTypeName name="java.net.URI"/>
<fullyQualifiedTypeName name="com.Exceptions.RoleFoundException"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="com.Repository.RoleRepo"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="com.Enum.RolesEnum"/>
<fullyQualifiedTypeName name="com.Entity.Role"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="java.nio.file.attribute.UserDefinedFileAttributeView"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
<fullyQualifiedTypeName name="com.Security.CustomeUserService"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
<fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
<fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
<fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.Repository.UserRepo"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="com.Exceptions.UserNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
</qualifiedTypeNameHistroy>
